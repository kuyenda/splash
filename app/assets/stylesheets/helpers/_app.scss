/* ------------------------------------------------------ */
//... Positioning
/* ------------------------------------------------------ */
// position
@each $var in (absolute, relative, static, fixed, sticky) {
    .#{$var} {
        position: $var
    }
}

// top, right, bottom, left
@each $key in (top right bottom left) {

    @each $key2,
    $var in zip((0 '025''050''075'1 2 3 4 -1 -2 -3 -4), (0 .25 .5 .75 1 2 3 4 -1 -2 -3 -4)) {
        .#{$key}-#{$key2} {
            #{$key}: #{$var}rem
        }
    }
}

// float
@each $var in (left right none) {
    .f#{str-slice($var, 1, 1)} {
        float: $var
    }
}

// clear
@each $var in (left right both none) {
    .c#{str-slice($var, 1, 1)} {
        float: $var
    }
}

// overflow
@each $var in (visible hidden scroll auto) {
    @each $var2 in ('''-x''-y') {
        .overflow#{$var2}-#{$var} {
            overflow#{$var2}: $var
        }
    }
}

// display

// z-index
@each $var in (0,
1,
2,
3,
4,
5,
6,
7,
8,
9,
999,
inherit,
initial,
unset) {
    .z-#{$var} {
        z-index: $var;
    }
}

/* ------------------------------------------------------ */
//... Dimension
/* ------------------------------------------------------ */
@each $key,
$prop in zip((w ht), (width, height)) {
    $var: 1;

    @for $i from 1 through 8 {
        $var: $var * 2;

        .#{$key}#{$i} {
            #{$prop}: #{$var}rem
        }
    }

    @each $var in (5 10 20 25 33 34 40 50 60 70 75 80 90 95 100) {
        .#{$key}-#{$var} {
            #{$prop}: #{$var}#{'%'}
        }
    }
}

// box-shadow
@each $key,
$var in (0:0, 1:.025, 2:0.05, 3:0.1, 4:0.2, 5:0.4, 6:0.5) {
    @if $key==0 {
        .shadow-#{$key} {
            box-shadow: none
        }
    }

    @else {
        .shadow-#{$key} {
            box-shadow: 0 .25rem .125rem 0 rgba(0, 0, 0, $var)
        }

        .shadow-inset-#{$key} {
            box-shadow: inset 0 .25rem .125rem 0 rgba(0, 0, 0, $var)
        }

    }
}

/* ------------------------------------------------------ */
//... Link
/* ------------------------------------------------------ */
.link {
    text-decoration: none;
    @include link-animation;

    &:link,
    &:visited,
    &:hover,
    &:active,
    &:focus {
        @include link-animation;
    }

    &-dotted {
        text-decoration-style: dotted;
        text-decoration-skip: unset
    }

    &-link-solid:hover {
        text-decoration-style: solid
    }

    &-underline-dark {
        text-decoration: underline;
        text-decoration-color: rgba(0, 0, 0, 0.15);

        &:hover {
            text-decoration: underline;
            text-decoration-color: initial
        }
    }

    &-underline-light {
        text-decoration: underline;
        text-decoration-color: rgba(255, 255, 255, 0.25);

        &:hover {
            text-decoration: underline;
            text-decoration-color: initial
        }
    }
}

.dim {
    opacity: 1;
    transition: opacity .1s ease-in;

    &:hover,
    &:focus {
        opacity: .5;
        transition: opacity .1s ease-in
    }

    &:active {
        opacity: .8;
        transition: opacity .1s ease-out
    }
}


.glow {
    transition: opacity .15s ease-in;

    &:hover,
    &:focus {
        opacity: 1;
        transition: opacity .15s ease-in
    }
}

/* ------------------------------------------------------ */
//... Transition
/* ------------------------------------------------------ */
@each $key,
$var in zip('b-''bg''color''all', border-color background-color color all) {
    .#{$key}-animated {

        &:hover,
        &:focus,
        & {
            transition: $var .1s ease-in-out
        }
    }
}

/* ------------------------------------------------------ */
//... List
/* ------------------------------------------------------ */
.list {
    list-style-type: none;
}

/* ------------------------------------------------------ */
//... Background
/* ------------------------------------------------------ */
// background-size
@each $var in (cover contain) {
    .#{$var} {
        background-size: $var;
    }
}

.bg {
    background-repeat: no-repeat;

    &-center {
        @extend .bg;
        background-position: center center
    }

    &-top {
        @extend .bg;
        background-position: top center
    }

    &-right {
        @extend .bg;
        background-position: center right
    }

    &-bottom {
        @extend .bg;
        background-position: bottom center
    }

}