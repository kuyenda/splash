/*
0          1        2        3        4        5          -1        -2        -3        -4
*/
$helper-colors: (("color", "darker", "lighter", "name"),
(#ff1744, (#f44336, #e53935, #d50000, #c62828, #b71c1c), (#ff5252, #e57373, #ff8a80, #ffebee), "red"),
(#f50057, (#e91e63, #d81b60, #c51162, #ad1457, #880e4f), (#ff4081, #f06292, #ff80ab, #fce4ec), "pink"),
(#d500f9, (#9c27b0, #8e24aa, #aa00ff, #6a1b9a, #4a148c), (#e040fb, #ba68c8, #ea80fc, #f3e5f5), "magenta"),
(#651fff, (#673ab7, #5e35b1, #6200ea, #4527a0, #311b92), (#7c4dff, #9575cd, #b388ff, #ede7f6), "grape"),
(#3d5afe, (#3f51b5, #3949ab, #304ffe, #283593, #1a237e), (#536dfe, #7986cb, #8c9eff, #e8eaf6), "indigo"),
(#2979ff, (#2196f3, #1e88e5, #2962ff, #1565c0, #0d47a1), (#448aff, #64b5f6, #82b1ff, #e3f2fd), "blue"),
(#00b0ff, (#03a9f4, #039be5, #0091ea, #0277bd, #01579b), (#40c4ff, #4fc3f7, #80d8ff, #e1f5fe), "light-blue"),
(#00e5ff, (#00bcd4, #00acc1, #00b8d4, #00838f, #006064), (#18ffff, #4dd0e1, #84ffff, #e0f7fa), "cyan"),
(#1de9b6, (#009688, #00897b, #00bfa5, #00695c, #004d40), (#64ffda, #4db6ac, #a7ffeb, #e0f2f1), "teal"),
(#00e676, (#4caf50, #43a047, #00c853, #2e7d32, #1b5e20), (#69f0ae, #81c784, #b9f6ca, #e8f5e9), "green"),
(#76ff03, (#8bc34a, #7cb342, #64dd17, #558b2f, #33691e), (#b2ff59, #aed581, #ccff90, #f1f8e9), "light-green"),
(#c6ff00, (#cddc39, #c0ca33, #aeea00, #9e9d24, #827717), (#eeff41, #c6ff00, #f4ff81, #f9fbe7), "lime"),
(#ffea00, (#ffeb3b, #fdd835, #ffd600, #f9a825, #f57f17), (#ffff00, #fff176, #ffff8d, #fffde7), "yellow"),
(#ffc400, (#ffc107, #ffb300, #ffab00, #ff8f00, #ff6f00), (#ffd740, #ffd54f, #ffe57f, #fff8e1), "amber"),
(#ff9100, (#ff9800, #fb8c00, #ff6d00, #ef6c00, #e65100), (#ffab40, #ffb74d, #ffd180, #fff3e0), "orange"),
(#ff3d00, (#ff5722, #f4511e, #dd2c00, #d84315, #bf360c), (#ff6e40, #ff8a65, #ff9e80, #fbe9e7), "dark-orange"),
(#5d4037, (#795548, #6d4c41, #5d4037, #4e342e, #3e2723), (#bcaaa4, #a1887f, #d7ccc8, #efebe9), "brown"),
(#455a64, (#607d8b, #546e7a, #455a64, #37474f, #263238), (#b0bec5, #90a4ae, #cfd8dc, #eceff1), "gray"),
(#616161, (#9e9e9e, #757575, #616161, #424242, #212121), (#eeeeee, #e0e0e0, #f5f5f5, #fafafa), "dark"));

$helper-colors-extra: (("color", "darker", "lighter", "name"),
(#40c057, (#37b24d, #2f9e44, #2b8a3e), (#51cf66, #69db7c, #8ce99a, #b2f2bb, #d3f9d8), "grass"),
(#e03131, (#f03e3e, #e03131, #c92a2a), (#ff6b6b, #ff8787, #ffa8a8, #ffc9c9, #ffe3e3), "pepper"),
(#6c757d, (#495057, #343a40, #212529), (#adb5bd, #ced4da, #ced4da, #e9ecef, #f8f9fa, #ffffff), "lead"));

//--------------------------------------------------------------------------
// ● 色板
//--------------------------------------------------------------------------
// 此方法可以产生颜色字典，请注意参数种类有误时会返回空字典
// 根据输入的基色可以依据最大颜色数产生若干个深浅颜色列表
/*
{'name': mygray;
  'base': #666,
  'lighter': (#777, #aaa, #fff),
  'darker': (#555, #333, #000)
}
*/
@function palette($name,
$base,
$darker: null,
$lighter: null) {

    // 检查基本参数
    @if type-of($name)=="string"and type-of($base)=="color" {
        $palette: ("name": $name, "base": $base);

        // 未指定自动生成
        @if $darker==null and $lighter==null {
            $darker: [$base];
            $lighter: [$base];

            @for $v from 1 through 2 {
                $darker: append($darker, darken(nth($darker, length($darker)), 20%));
                $lighter: append($lighter, lighten(nth($lighter, length($lighter)), 20%));
            }

            $darker: nth-delete($darker, 1);
            $lighter: nth-delete($lighter, 1);
        }

        @if type-of($darker)=="list"and type-of($lighter)=="list" {
            $palette: map-merge($palette,
                ("darker": $darker, "lighter":$lighter));
        }

        @return $palette;
    }

    @return ();
}

// 将颜色字典生成对应的类
@mixin colorize($palette) {

    // 空字典无法生成正确的类
    @if type-of($palette)=="map" {
        $name: map-get($palette, 'name');
        $base: map-get($palette, 'base');
        $darker: map-get($palette, 'darker');
        $lighter: map-get($palette, 'lighter');

        @for $index from -(length($lighter)) through length($darker) {

            $color: $base;

            @if $index < 0 {
                $color: nth($lighter, abs($index));
                $index: '0'+ abs($index);
            }

            @else if $index>0 {
                $color: nth($darker, abs($index));
            }

            @else {
                $index: null;
            }

            .#{$name}#{$index},
            .#{$name}#{$index}h:hover,
            .#{$name}#{$index}f:focus {
                color: $color
            }

            .bg#{$name}#{$index},
            .bg#{$name}#{$index}h:hover,
            .bg#{$name}#{$index}f:focus {
                background-color: $color
            }

            .b#{$name}#{$index} {
                border-color: $color
            }
        }
    }
}

// 创建颜色字典列表
// 包括基础颜色和Bootstrap主题色
@mixin colorize-all($extra: null) {
    $colors: $helper-colors;
    $palettes: ();

    @each $key,
    $var in $theme-colors {
        $colors: append($colors, ($var, null, null, $key));
    }

    @if $extra !=null {
        $colors: join($colors, $extra);
    }

    @each $base,
    $darker,
    $lighter,
    $name in $colors {
        $palettes: append($palettes, palette($name, $base, $darker, $lighter));
    }

    @each $palette in $palettes {
        @include colorize($palette);
    }
}

@include colorize-all($helper-colors-extra);
//--------------------------------------------------------------------------
// ● 黑白颜色通过更加灵活的选择器创建
//--------------------------------------------------------------------------
$helper-transparency: ('': 1,
'90': .9,
'80': .8,
'70': .7,
'60': .6,
'50': .5,
'40': .4,
'30': .3,
'20': .2,
'15': .15,
'10': .1,
'05': .05,
'02': .02,
'01': .01,
'025': .025,
'0125': .0125);

@each $key,
$var in $helper-transparency {

    @each $color,
    $luminance in ("white": 100%, "black":0%) {

        .#{$color}#{$key},
        .#{$color}#{$key}h:hover,
        .#{$color}#{$key}f:focus {
            color: hsla(0, 0, $luminance, $var);
        }

        .bg#{$color}#{$key},
        .bg#{$color}#{$key}h:hover,
        .bg#{$color}#{$key}f:focus {
            background-color: hsla(0, 0, $luminance, $var);
        }

        .b#{$color}#{$key} {
            border-color: hsla(0, 0, $luminance, $var);
        }

    }
}